{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","App.tsx","index.tsx"],"names":["Loader","className","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedTodo","setSelectedTodo","useState","user","setUser","loading","setLoading","useEffect","userId","currentUser","finally","id","type","onClick","title","completed","href","name","TodoList","todos","map","todo","cn","TodoFilter","setFilter","setQuery","query","onChange","e","target","value","placeholder","style","pointerEvents","App","setTodos","filter","filteredTodos","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f2dc65c.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo;\n  setSelectedTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = (\n  {\n    selectedTodo,\n    setSelectedTodo,\n  },\n) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(currentUser => setUser(currentUser))\n        .finally(() => setLoading(false));\n    }\n  }, [selectedTodo, selectedTodo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading && (\n        <Loader />\n      )}\n\n      {!loading && user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              {user && (\n                <a href=\"mailto:Sincere@april.biz\">\n                  {user.name}\n                </a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodoModal } from '../TodoModal';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  return (\n    <>\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {todos.map(todo => (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={cn({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    setSelectedTodo(todo);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('far', {\n                      'fa-eye': !selectedTodo || selectedTodo.id !== todo.id,\n                      'fa-eye-slash': selectedTodo\n                      && selectedTodo.id === todo.id,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\n\ntype Props = {\n  setFilter: (item: string) => void;\n  query: string;\n  setQuery: (item: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  { setFilter, setQuery, query },\n) => (\n\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(e) => setFilter(e.target.value)}\n        >\n          <option\n            value=\"all\"\n          >\n            All\n          </option>\n          <option\n            value=\"active\"\n          >\n            Active\n          </option>\n          <option\n            value=\"completed\"\n          >\n            Completed\n          </option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        value={query}\n        className=\"input\"\n        placeholder=\"Search...\"\n        onChange={(e) => setQuery(e.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [filter, setFilter] = useState('all');\n  const [query, setQuery] = useState('');\n\n  let filteredTodos: Todo[] = todos;\n\n  switch (filter) {\n    case 'all':\n      filteredTodos = todos;\n\n      break;\n\n    case 'completed':\n      filteredTodos = todos.filter(todo => todo.completed === true);\n\n      break;\n\n    case 'active':\n      filteredTodos = todos.filter(todo => todo.completed === false);\n\n      break;\n\n    default: {\n      break;\n    }\n  }\n\n  if (query) {\n    filteredTodos = filteredTodos.filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n  }\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilter={setFilter}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n              {!loading && todos.length > 0 && (\n                <TodoList todos={filteredTodos} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}